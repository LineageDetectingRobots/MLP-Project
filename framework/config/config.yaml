# Treat this similarly to json
DEFAULT:
  use_cuda: true
  experiment_name: default_experiment
  data_settings:
    # Network name choices: 'arc_face', 'vgg_face', 'sphere_face', 'vgg_face2'
    network_name: "arc_face"
  training_settings:
    batch_size: 64
    epochs: 20
    early_stopping: false
    # How many epochs of not increased validation acc. before we stop
    es_epochs: 1
    # Could add callbacks for stats
    # Could add checkpoints to load or save the model
  # We could be experimenting with different networks this is
  model_settings:
    model_name: "MLP"
    output_size: 2
    layer_config: [1024, 512, 256, 128, 64, 32, 16, 8, 4]
    use_batch_norm: false
    activation_func: relu
    use_bias: true
    dropout_val: 0.0
    optimiser_type: 'adam'
    learning_rate: 0.001
    # Image info could go here, channels, image height/width
    # num layers, output dim etc. This can all be configured
  evaluation:
    # can decide what metrics we want to do here
    # loss tp/fp ...
    # configure what and how to save data here
CIARAN:
  experiment_name: four_layer_dec_four
    # Could add callbacks for stats
    # Could add checkpoints to load or save the model
  # We could be experimenting with different networks this is
  model_settings:
    layer_config: [1024,256,64,16]


Jack:
  training_settings:
    batch_size: 64